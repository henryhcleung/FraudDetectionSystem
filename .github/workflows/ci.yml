name: Continuous Integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * *'

env:
  JAVA_VERSION: '17.0.12'
  MAVEN_VERSION: '3.8.4'

permissions:
  contents: read
  packages: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven
      - name: Build
        run: mvn -B clean install -DskipTests -s custom-settings.xml

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven
      - name: Test
        run: mvn -B test -s custom-settings.xml
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: TestResults
          path: target/surefire-reports/
          retention-days: 1

  analyze:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven
      - name: SonarQube Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_ORGANIZATION: 'your-sonar-organization' # Add this line
        run: mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=henryhcleung_FraudDetectionSystem -Dsonar.organization=${{ env.SONAR_ORGANIZATION }} -s custom-settings.xml

  security-scan:
    needs: analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven
      - name: Run OWASP Dependency-Check
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
        run: mvn dependency-check:purge dependency-check:check -Dnvd.apiKey=${{ env.NVD_API_KEY }} -DdataDirectory=${{ github.workspace }}/dependency-check-data -DfailBuildOnCVSS=7 -Dformat=ALL -s custom-settings.xml
      - name: Upload OWASP Dependency-Check report
        uses: actions/upload-artifact@v4
        with:
          name: Dependency-Check-Report
          path: target/dependency-check-report.html
          retention-days: 1

  trigger-cd:
    needs: [build, test, analyze, security-scan]
    runs-on: ubuntu-latest
    steps:
      - name: Trigger CD Workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: trigger-cd
          client-payload: '{"run_id": "${{ github.run_id }}"}'