name: CI/CD Pipeline with Kind

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC

env:
  JAVA_VERSION: '11'
  NODE_VERSION: '20'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'adopt'
          cache: maven
      - name: Build and test
        run: mvn clean package
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: FraudDetectionSystem
          path: target/FraudDetectionSystem-*.jar

  security-scan:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'FraudDetectionSystem'
          path: '.'
          format: 'HTML'
      - name: Upload OWASP Dependency-Check report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: ${{github.workspace}}/reports

  docker-build-push:
    needs: [build-and-test, security-scan]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: FraudDetectionSystem
          path: target
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        run: |
          for i in {1..3}; do
            docker buildx build --push --tag ${{ secrets.DOCKER_USERNAME }}/fraud-detection-system:latest --tag ${{ secrets.DOCKER_USERNAME }}/fraud-detection-system:${{ github.sha }} .
            if [ $? -eq 0 ]; then
              break
            fi
            echo "Retrying in 10 seconds..."
            sleep 10
          done
      - name: Clean up old images
        run: |
          docker image prune -f
          docker images --filter "dangling=true" -q | xargs -r docker rmi

  deploy-to-kind:
    needs: docker-build-push
    runs-on: ubuntu-latest
    steps:
      - name: Set up Kind
        uses: kind-ci/setup-kind@v0.6.0  # Updated to a version that supports Node.js 16/20
      - name: Delete existing Kind cluster
        run: kind delete cluster || true
      - name: Create Kind cluster
        run: kind create cluster
      - name: Deploy to Kind
        run: |
          kubectl apply -f k8s/configmap.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
      - name: Run tests
        run: |
          # Add your test commands here
          echo "Running tests..."

  notify:
    if: failure()
    needs: 
      - build-and-test
      - security-scan
      - docker-build-push
      - deploy-to-kind
    runs-on: ubuntu-latest
    steps:
      - name: Send email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: Build Notification - Failure in ${{ github.workflow }}
          to: henryleungdemotest@gmail.com
          from: github-actions@gmail.com
          body: |
            Build Notification

            The build has failed in the ${{ github.workflow }} workflow.

            Repository: ${{ github.repository }}
            Branch: ${{ github.ref }}
            Commit: ${{ github.sha }}
            Commit Message: ${{ github.event.head_commit.message }}
            Author: ${{ github.event.head_commit.author.name }}
            Build URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            Please check the logs for more details.