name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC

env:
  JAVA_VERSION: '11'
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/frauddetectionsystem

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Run unit tests
        run: mvn test
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: FraudDetectionSystem
          path: target/FraudDetectionSystem-*.jar

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v4
      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'FraudDetectionSystem'
          path: '.'
          format: 'HTML'
      - name: Upload OWASP Dependency-Check report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: ${{github.workspace}}/reports

  docker-build-push:
    needs: [build-and-test, security-scan]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest,${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache,mode=max

  deploy-staging:
    needs: docker-build-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
      - name: Deploy to staging
        run: |
          kubectl apply -f k8s/staging/
          kubectl set image deployment/frauddetection frauddetection=${{ env.DOCKER_IMAGE }}:${{ github.sha }}

  integration-tests:
    needs: deploy-staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run integration tests
        run: |
          npm install -g newman
          newman run tests/integration-tests.json

  performance-tests:
    needs: deploy-staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run k6 performance tests
        uses: grafana/k6-action@v0.3.0
        with:
          filename: performance-tests.js

  deploy-production:
    needs: [integration-tests, performance-tests]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
      - name: Deploy to production
        run: |
          kubectl apply -f k8s/production/
          kubectl set image deployment/frauddetection frauddetection=${{ env.DOCKER_IMAGE }}:${{ github.sha }}

  notify:
    needs: deploy-production
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Send email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: Build Notification
          to: henryleungdemotest@gmail.com
          from: github-actions@gmail.com
          body: |
            Build Notification

            The build has failed.

            **Repository**: ${{ github.repository }}
            **Branch**: ${{ github.ref }}
            **Commit**: ${{ github.sha }}
            **Commit Message**: ${{ github.event.head_commit.message }}
            **Author**: ${{ github.event.head_commit.author.name }}
            **Build URL**: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            Please check the logs for more details.