name: Continuous Integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC

env:
  JAVA_VERSION: '17'
  MAVEN_VERSION: '3.8.4'

permissions:
  contents: read
  packages: write
  actions: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK and Maven
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          maven-version: ${{ env.MAVEN_VERSION }}
          distribution: 'adopt'
          cache: 'maven'

      - name: Build and test
        run: mvn clean verify

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: FraudDetectionSystem
          path: target/FraudDetectionSystem-*.jar
          if-no-files-found: error

  security-scan:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'FraudDetectionSystem'
          path: '.'
          format: 'HTML'
          
      - name: Upload OWASP Dependency-Check report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: ${{github.workspace}}/reports
          if-no-files-found: warn

  docker-build:
    needs: [build-and-test, security-scan]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: FraudDetectionSystem
          path: target
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/fraud-detection-system:latest
            ${{ secrets.DOCKER_USERNAME }}/fraud-detection-system:${{ github.sha }}

  trigger-cd:
    needs: [docker-build]
    runs-on: ubuntu-latest
    steps:
      - name: Trigger CD Workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: trigger-cd
          client-payload: '{"run_id": "${{ github.run_id }}", "sha": "${{ github.sha }}"}'