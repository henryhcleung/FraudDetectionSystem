@Library('my-shared-library') _

pipeline {
    agent { label 'microservice-deploy-agent-1' }
    
    parameters {
        string(name: 'BUILD_NUMBER', description: 'Build number to deploy')
        choice(name: 'ENV', choices: ['dev', 'staging', 'prod'], description: 'Environment to deploy to')
    }
    
    environment {
        KUBERNETES_NAMESPACE = "fraud-detection-${params.ENV}"
        DOCKER_IMAGE = 'fraud-detection-system'
        DOCKER_TAG = "${params.BUILD_NUMBER}-${params.ENV}"
        DOCKER_CREDENTIALS = credentials('docker-hub-credentials')
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Deploy to Kubernetes') {
            steps {
                withKubeConfig([credentialsId: 'kube-config']) {
                    sh "./cd/deploy.sh ${params.ENV}"
                }
            }
        }
        
        stage('Run Integration Tests') {
            steps {
                script {
                    runIntegrationTests()
                }
            }
        }
        
        stage('Smoke Tests') {
            steps {
                sh "./scripts/smoke-tests.sh ${params.ENV}"
            }
        }
    }
    
    post {
        success {
            notifyDeploymentSuccess()
        }
        failure {
            notifyDeploymentFailure()
        }
        always {
            sh 'kubectl get pods,services,deployments -n ${KUBERNETES_NAMESPACE}'
        }
    }
}